# Number of Islands
# https://leetcode.com/problems/number-of-islands/

class Solution:
    def numIslands(self, grid) -> int:
      islands = 0

      for row in range(len(grid)):
        for col in range(len(grid[row])):
          if grid[row][col] is "1":
            islands += 1
            self.dfs(grid, row, col)

      return islands



    def dfs(self, grid, x, y):
      if x < 0 or x >= len(grid) or y < 0 or y >= len(grid[0]) or grid[x][y] != '1':
        return

      grid[x][y] = '#'

      self.dfs(grid, x, y+1)
      self.dfs(grid, x+1, y)
      self.dfs(grid, x, y-1)
      self.dfs(grid, x-1, y)








# test cases
s = Solution()
t1 = [["1","1","1","1","0"],["1","1","0","1","0"],["1","1","0","0","0"],["0","0","0","0","0"]]
t2 = [["1","1","0","0","0"],["1","1","0","0","0"],["0","0","1","0","0"],["0","0","0","1","1"]]
print(s.numIslands(t1) == 1)
print(s.numIslands(t2) == 3)
