def find_midpoint(arr):
  return len(arr) // 2;

def binarysearch(arr, target):
  if len(arr) == 1:
    if arr[0] == target:
      return 0
    else:
      return -1
  elif len(arr) < 1:
    return -1

  mid_i = find_midpoint(arr)
  mid_v = arr[mid_i]
  if target < mid_v:
    res = binarysearch(arr[:mid_i], target)
    return -1 if res == -1 else res
  elif target >= mid_v:
    res = binarysearch(arr[mid_i:], target)
    return -1 if res == -1 else mid_i + res



# test cases
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 1) == 0)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 144) == 9)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 13) == 4)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 15) == 5)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 5) == 2)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 67) == 7)
print(binarysearch([1,2,5,7,13,15,32,67,88,144], 73) == -1)
